// Mocks generated by Mockito 5.0.15 from annotations
// in vehicles_app/data/repositories/person_repository.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:vehicles_app/data/models/models.dart' as _i3;
import 'package:vehicles_app/data/repositories/person_repository.dart' as _i4;
import 'package:vehicles_app/data/services/vehicles_service.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeVehiclesService_0 extends _i1.Fake implements _i2.VehiclesService {}

class _FakePerson_1 extends _i1.Fake implements _i3.Person {}

/// A class which mocks [PersonRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPersonRepository extends _i1.Mock implements _i4.PersonRepository {
  MockPersonRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.VehiclesService get vehiclesService =>
      (super.noSuchMethod(Invocation.getter(#vehiclesService),
          returnValue: _FakeVehiclesService_0()) as _i2.VehiclesService);
  @override
  _i5.Future<List<_i3.Person>> getPersonList() =>
      (super.noSuchMethod(Invocation.method(#getPersonList, []),
              returnValue: Future<List<_i3.Person>>.value(<_i3.Person>[]))
          as _i5.Future<List<_i3.Person>>);
  @override
  _i5.Future<_i3.Person> getPersonDetails(String? id) =>
      (super.noSuchMethod(Invocation.method(#getPersonDetails, [id]),
              returnValue: Future<_i3.Person>.value(_FakePerson_1()))
          as _i5.Future<_i3.Person>);
  @override
  String toString() => super.toString();
}
